function [u,label] = generate_input_stim_xor(T, stim_on, stim_dur, delay)
% generates random stimulus from xor

% XOR task
labs = zeros(2);
if np.random.rand() < 0.50
    u[0, stim_on:stim_on+stim_dur] = 1
    labs.append(1)
else:
    u[0, stim_on:stim_on+stim_dur] = -1
    labs.append(-1)

    if np.random.rand() < 0.50:
        u[1, stim_on+stim_dur+delay:stim_on+2*stim_dur+delay] = 1
        labs(1) = 1;
    else
        u[1, stim_on+stim_dur+delay:stim_on+2*stim_dur+delay] = -1
        labs(2) = -1;

        if labs(1)*labs(2) == 1:
            label = 'same';
        else
            label = 'diff';
        end
    end
end



u = zeros(2, T+1); % input stim
u(1, stim_on:stim_on+stim_dur) = 1; % first stim is +1
u(2, stim_on+stim_dur+delay:stim_on+2*stim_dur+delay) = 1; % second stim is +1

end